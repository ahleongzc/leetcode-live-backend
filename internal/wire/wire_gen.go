// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/ahleongzc/leetcode-live-backend/cmd/app"
	"github.com/ahleongzc/leetcode-live-backend/internal/background"
	"github.com/ahleongzc/leetcode-live-backend/internal/config"
	"github.com/ahleongzc/leetcode-live-backend/internal/handler"
	"github.com/ahleongzc/leetcode-live-backend/internal/infra"
	"github.com/ahleongzc/leetcode-live-backend/internal/middleware"
	"github.com/ahleongzc/leetcode-live-backend/internal/repo"
	"github.com/ahleongzc/leetcode-live-backend/internal/scenario"
	"github.com/ahleongzc/leetcode-live-backend/internal/service"
)

// Injectors from wire.go:

func InitializeApplication() (*app.Application, error) {
	databaseConfig := config.LoadDatabaseConfig()
	db, err := infra.NewPostgresDatabase(databaseConfig)
	if err != nil {
		return nil, err
	}
	sessionRepo := repo.NewSessionRepo(db)
	userRepo := repo.NewUserRepo(db)
	authService := service.NewAuthService(sessionRepo, userRepo)
	authHandler := handler.NewAuthHandler(authService)
	healthHandler := handler.NewHealthHandler()
	websocketConfig := config.LoadWebsocketConfig()
	llm := infra.NewLLM()
	interviewRepo := repo.NewInterviewRepo(db)
	authScenario := scenario.NewAuthScenario(userRepo, sessionRepo)
	transcriptRepo := repo.NewTranscriptRepo(db)
	transcriptManager := scenario.NewTranscriptManager(transcriptRepo)
	intentClassifier := scenario.NewIntentClassifier()
	interviewService := service.NewInterviewService(llm, interviewRepo, authScenario, transcriptManager, intentClassifier)
	logger := infra.NewZerologLogger()
	interviewHandler := handler.NewInterviewHandler(websocketConfig, authService, interviewService, logger)
	middlewareMiddleware := middleware.NewMiddleware(logger)
	houseKeeper := background.NewHouseKeeper(sessionRepo, logger)
	application := app.NewApplication(authHandler, healthHandler, interviewHandler, middlewareMiddleware, houseKeeper)
	return application, nil
}
